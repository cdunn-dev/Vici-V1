openapi: 3.0.0
info:
  title: Vici API
  description: API for the Vici training platform
  version: 1.0.0
  contact:
    email: support@vici.com

servers:
  - url: /api/v1
    description: Version 1

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          format: email
        name:
          type: string
        emailVerified:
          type: boolean
        country:
          type: string
        region:
          type: string
        city:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        timezone:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - email
        - name
        - emailVerified
        - createdAt
        - updatedAt

    ApiKey:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        name:
          type: string
        isActive:
          type: boolean
        expiresAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - userId
        - name
        - isActive
        - createdAt
        - updatedAt

    TrainingProgram:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - userId
        - name
        - startDate
        - endDate
        - createdAt
        - updatedAt

    WorkoutExercise:
      type: object
      properties:
        id:
          type: integer
          format: int64
        workoutId:
          type: integer
          format: int64
        name:
          type: string
        sets:
          type: integer
          format: int32
        reps:
          type: integer
          format: int32
        weight:
          type: number
          format: float
        notes:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - workoutId
        - name
        - createdAt
        - updatedAt

    Workout:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        programId:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        date:
          type: string
          format: date-time
        completed:
          type: boolean
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/WorkoutExercise'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - userId
        - name
        - date
        - completed
        - createdAt
        - updatedAt

    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
            code:
              type: string
            details:
              type: array
              items:
                type: object
                properties:
                  path:
                    type: string
                  message:
                    type: string
          required:
            - message
            - code

    LLMRequest:
      type: object
      required:
        - prompt
      properties:
        prompt:
          type: string
          maxLength: 4000
        model:
          type: string
          enum:
            - gpt-4
            - gpt-4-turbo
            - gpt-3.5-turbo
            - claude-3-opus
            - claude-3-sonnet
            - claude-3-haiku
            - gemini-pro
            - gemini-ultra
        provider:
          type: string
          enum:
            - openai
            - anthropic
            - gemini
        temperature:
          type: number
          minimum: 0
          maximum: 2
        maxTokens:
          type: integer
          minimum: 1
          maximum: 4000
        stopSequences:
          type: array
          items:
            type: string
        systemPrompt:
          type: string
          maxLength: 4000
        metadata:
          type: object
          additionalProperties: true

    LLMResponse:
      type: object
      properties:
        text:
          type: string
        model:
          type: string
        provider:
          type: string
        usage:
          type: object
          properties:
            promptTokens:
              type: integer
            completionTokens:
              type: integer
            totalTokens:
              type: integer
        latency:
          type: integer
        metadata:
          type: object
          additionalProperties: true

    LLMModels:
      type: object
      properties:
        openai:
          type: array
          items:
            type: string
        anthropic:
          type: array
          items:
            type: string
        gemini:
          type: array
          items:
            type: string

    LLMStatus:
      type: object
      properties:
        openai:
          type: boolean
        anthropic:
          type: boolean
        gemini:
          type: boolean

    LLMUsage:
      type: object
      properties:
        openai:
          type: object
          properties:
            requests:
              type: integer
            tokens:
              type: integer
        anthropic:
          type: object
          properties:
            requests:
              type: integer
            tokens:
              type: integer
        gemini:
          type: object
          properties:
            requests:
              type: integer
            tokens:
              type: integer

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  minLength: 8
                name:
                  type: string
                  minLength: 2
              required:
                - email
                - password
                - name
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
                  refreshToken:
                    type: string
        '400':
          description: Validation error or user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Login user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
                  token:
                    type: string
                  refreshToken:
                    type: string
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh-token:
    post:
      summary: Refresh access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  refreshToken:
                    type: string
        '401':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me:
    get:
      summary: Get current user profile
      tags:
        - Users
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me:
    put:
      summary: Update current user profile
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 2
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/me/password:
    put:
      summary: Change password
      tags:
        - Users
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
                  minLength: 8
              required:
                - currentPassword
                - newPassword
      responses:
        '200':
          description: Password changed successfully
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized or incorrect current password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /training/programs:
    get:
      summary: Get user's training programs
      tags:
        - Training
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Training programs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  programs:
                    type: array
                    items:
                      $ref: '#/components/schemas/TrainingProgram'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /training/programs:
    post:
      summary: Create a new training program
      tags:
        - Training
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
              required:
                - name
                - startDate
                - endDate
      responses:
        '201':
          description: Training program created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  program:
                    $ref: '#/components/schemas/TrainingProgram'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /training/programs/{id}:
    get:
      summary: Get a specific training program
      tags:
        - Training
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Training program retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  program:
                    $ref: '#/components/schemas/TrainingProgram'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Training program not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /training/programs/{id}:
    put:
      summary: Update a training program
      tags:
        - Training
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Training program updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  program:
                    $ref: '#/components/schemas/TrainingProgram'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Training program not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /training/programs/{id}:
    delete:
      summary: Delete a training program
      tags:
        - Training
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Training program deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Training program not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /workouts:
    get:
      summary: Get user's workouts
      tags:
        - Workouts
      security:
        - BearerAuth: []
      parameters:
        - name: programId
          in: query
          schema:
            type: integer
            format: int64
        - name: completed
          in: query
          schema:
            type: boolean
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Workouts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  workouts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Workout'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /workouts:
    post:
      summary: Create a new workout
      tags:
        - Workouts
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                programId:
                  type: integer
                  format: int64
                name:
                  type: string
                description:
                  type: string
                date:
                  type: string
                  format: date-time
                exercises:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      sets:
                        type: integer
                        format: int32
                      reps:
                        type: integer
                        format: int32
                      weight:
                        type: number
                        format: float
                      notes:
                        type: string
              required:
                - name
                - date
      responses:
        '201':
          description: Workout created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  workout:
                    $ref: '#/components/schemas/Workout'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /workouts/{id}:
    get:
      summary: Get a specific workout
      tags:
        - Workouts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Workout retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  workout:
                    $ref: '#/components/schemas/Workout'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Workout not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /workouts/{id}:
    put:
      summary: Update a workout
      tags:
        - Workouts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                date:
                  type: string
                  format: date-time
                completed:
                  type: boolean
                exercises:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      sets:
                        type: integer
                        format: int32
                      reps:
                        type: integer
                        format: int32
                      weight:
                        type: number
                        format: float
                      notes:
                        type: string
      responses:
        '200':
          description: Workout updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  workout:
                    $ref: '#/components/schemas/Workout'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Workout not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /workouts/{id}:
    delete:
      summary: Delete a workout
      tags:
        - Workouts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Workout deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Workout not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /llm/generate:
    post:
      summary: Generate text using an LLM
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LLMRequest'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LLMResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /llm/models:
    get:
      summary: Get available LLM models
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LLMModels'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /llm/status:
    get:
      summary: Get LLM provider status
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LLMStatus'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /llm/usage:
    get:
      summary: Get LLM usage statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LLMUsage'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /llm/metrics:
    get:
      summary: Get LLM metrics
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: Optional date for historical metrics (YYYY-MM-DD)
        - name: provider
          in: query
          schema:
            type: string
            enum:
              - openai
              - anthropic
              - gemini
          description: Optional provider to filter metrics
        - name: model
          in: query
          schema:
            type: string
            enum:
              - gpt-4
              - gpt-4-turbo
              - gpt-3.5-turbo
              - claude-3-opus
              - claude-3-sonnet
              - claude-3-haiku
              - gemini-pro
              - gemini-ultra
          description: Optional model to filter metrics
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  requests:
                    type: integer
                  tokens:
                    type: integer
                  errors:
                    type: integer
                  latency:
                    type: number
                  cost:
                    type: number
                  models:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        requests:
                          type: integer
                        tokens:
                          type: integer
                        errors:
                          type: integer
                        latency:
                          type: number
                        cost:
                          type: number
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /llm/metrics/cost:
    get:
      summary: Get LLM cost metrics
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: Optional date for historical metrics (YYYY-MM-DD)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /llm/metrics/errors:
    get:
      summary: Get LLM error metrics
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: Optional date for historical metrics (YYYY-MM-DD)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /llm/metrics/latency:
    get:
      summary: Get LLM latency metrics
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date
          description: Optional date for historical metrics (YYYY-MM-DD)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: number
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 